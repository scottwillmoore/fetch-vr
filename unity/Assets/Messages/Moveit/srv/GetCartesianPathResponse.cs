//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Moveit
{
    [Serializable]
    public class GetCartesianPathResponse : Message
    {
        public const string k_RosMessageName = "moveit_msgs/GetCartesianPath";
        public override string RosMessageName => k_RosMessageName;

        //  The state at which the computed path starts
        public RobotStateMsg start_state;
        //  The computed solution trajectory, for the desired group, in configuration space
        public RobotTrajectoryMsg solution;
        //  If the computation was incomplete, this value indicates the fraction of the path
        //  that was in fact computed (nr of waypoints traveled through)
        public double fraction;
        //  The error code of the computation
        public MoveItErrorCodesMsg error_code;

        public GetCartesianPathResponse()
        {
            this.start_state = new RobotStateMsg();
            this.solution = new RobotTrajectoryMsg();
            this.fraction = 0.0;
            this.error_code = new MoveItErrorCodesMsg();
        }

        public GetCartesianPathResponse(RobotStateMsg start_state, RobotTrajectoryMsg solution, double fraction, MoveItErrorCodesMsg error_code)
        {
            this.start_state = start_state;
            this.solution = solution;
            this.fraction = fraction;
            this.error_code = error_code;
        }

        public static GetCartesianPathResponse Deserialize(MessageDeserializer deserializer) => new GetCartesianPathResponse(deserializer);

        private GetCartesianPathResponse(MessageDeserializer deserializer)
        {
            this.start_state = RobotStateMsg.Deserialize(deserializer);
            this.solution = RobotTrajectoryMsg.Deserialize(deserializer);
            deserializer.Read(out this.fraction);
            this.error_code = MoveItErrorCodesMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.start_state);
            serializer.Write(this.solution);
            serializer.Write(this.fraction);
            serializer.Write(this.error_code);
        }

        public override string ToString()
        {
            return "GetCartesianPathResponse: " +
            "\nstart_state: " + start_state.ToString() +
            "\nsolution: " + solution.ToString() +
            "\nfraction: " + fraction.ToString() +
            "\nerror_code: " + error_code.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
