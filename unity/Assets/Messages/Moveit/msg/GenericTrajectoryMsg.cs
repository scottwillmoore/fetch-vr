//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Moveit
{
    [Serializable]
    public class GenericTrajectoryMsg : Message
    {
        public const string k_RosMessageName = "moveit_msgs/GenericTrajectory";
        public override string RosMessageName => k_RosMessageName;

        //  A generic trajectory message that may either encode a joint- or cartesian-space trajectory, or both
        //  Trajectories encoded in this message are considered semantically equivalent
        public HeaderMsg header;
        public Trajectory.JointTrajectoryMsg[] joint_trajectory;
        public CartesianTrajectoryMsg[] cartesian_trajectory;

        public GenericTrajectoryMsg()
        {
            this.header = new HeaderMsg();
            this.joint_trajectory = new Trajectory.JointTrajectoryMsg[0];
            this.cartesian_trajectory = new CartesianTrajectoryMsg[0];
        }

        public GenericTrajectoryMsg(HeaderMsg header, Trajectory.JointTrajectoryMsg[] joint_trajectory, CartesianTrajectoryMsg[] cartesian_trajectory)
        {
            this.header = header;
            this.joint_trajectory = joint_trajectory;
            this.cartesian_trajectory = cartesian_trajectory;
        }

        public static GenericTrajectoryMsg Deserialize(MessageDeserializer deserializer) => new GenericTrajectoryMsg(deserializer);

        private GenericTrajectoryMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.joint_trajectory, Trajectory.JointTrajectoryMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.cartesian_trajectory, CartesianTrajectoryMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.WriteLength(this.joint_trajectory);
            serializer.Write(this.joint_trajectory);
            serializer.WriteLength(this.cartesian_trajectory);
            serializer.Write(this.cartesian_trajectory);
        }

        public override string ToString()
        {
            return "GenericTrajectoryMsg: " +
            "\nheader: " + header.ToString() +
            "\njoint_trajectory: " + System.String.Join(", ", joint_trajectory.ToList()) +
            "\ncartesian_trajectory: " + System.String.Join(", ", cartesian_trajectory.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
