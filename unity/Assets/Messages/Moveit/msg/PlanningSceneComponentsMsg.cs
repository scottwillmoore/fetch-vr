//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Moveit
{
    [Serializable]
    public class PlanningSceneComponentsMsg : Message
    {
        public const string k_RosMessageName = "moveit_msgs/PlanningSceneComponents";
        public override string RosMessageName => k_RosMessageName;

        //  This message defines the components that make up the PlanningScene message.
        //  The values can be used as a bitfield to specify which parts of the PlanningScene message
        //  are of interest
        //  Scene name, model name, model root
        public const uint SCENE_SETTINGS = 1;
        //  Joint values of the robot state
        public const uint ROBOT_STATE = 2;
        //  Attached objects (including geometry) for the robot state
        public const uint ROBOT_STATE_ATTACHED_OBJECTS = 4;
        //  The names of the world objects
        public const uint WORLD_OBJECT_NAMES = 8;
        //  The geometry of the world objects
        public const uint WORLD_OBJECT_GEOMETRY = 16;
        //  The maintained octomap 
        public const uint OCTOMAP = 32;
        //  The maintained list of transforms
        public const uint TRANSFORMS = 64;
        //  The allowed collision matrix
        public const uint ALLOWED_COLLISION_MATRIX = 128;
        //  The default link padding and link scaling
        public const uint LINK_PADDING_AND_SCALING = 256;
        //  The stored object colors
        public const uint OBJECT_COLORS = 512;
        //  Bitfield combining options indicated above
        public uint components;

        public PlanningSceneComponentsMsg()
        {
            this.components = 0;
        }

        public PlanningSceneComponentsMsg(uint components)
        {
            this.components = components;
        }

        public static PlanningSceneComponentsMsg Deserialize(MessageDeserializer deserializer) => new PlanningSceneComponentsMsg(deserializer);

        private PlanningSceneComponentsMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.components);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.components);
        }

        public override string ToString()
        {
            return "PlanningSceneComponentsMsg: " +
            "\ncomponents: " + components.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
