//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Moveit
{
    [Serializable]
    public class OrientationConstraintMsg : Message
    {
        public const string k_RosMessageName = "moveit_msgs/OrientationConstraint";
        public override string RosMessageName => k_RosMessageName;

        //  This message contains the definition of an orientation constraint.
        public HeaderMsg header;
        //  The desired orientation of the robot link specified as a quaternion
        public Geometry.QuaternionMsg orientation;
        //  The robot link this constraint refers to
        public string link_name;
        //  optional axis-angle error tolerances specified
        public double absolute_x_axis_tolerance;
        public double absolute_y_axis_tolerance;
        public double absolute_z_axis_tolerance;
        //  A weighting factor for this constraint (denotes relative importance to other constraints. Closer to zero means less important)
        public double weight;

        public OrientationConstraintMsg()
        {
            this.header = new HeaderMsg();
            this.orientation = new Geometry.QuaternionMsg();
            this.link_name = "";
            this.absolute_x_axis_tolerance = 0.0;
            this.absolute_y_axis_tolerance = 0.0;
            this.absolute_z_axis_tolerance = 0.0;
            this.weight = 0.0;
        }

        public OrientationConstraintMsg(HeaderMsg header, Geometry.QuaternionMsg orientation, string link_name, double absolute_x_axis_tolerance, double absolute_y_axis_tolerance, double absolute_z_axis_tolerance, double weight)
        {
            this.header = header;
            this.orientation = orientation;
            this.link_name = link_name;
            this.absolute_x_axis_tolerance = absolute_x_axis_tolerance;
            this.absolute_y_axis_tolerance = absolute_y_axis_tolerance;
            this.absolute_z_axis_tolerance = absolute_z_axis_tolerance;
            this.weight = weight;
        }

        public static OrientationConstraintMsg Deserialize(MessageDeserializer deserializer) => new OrientationConstraintMsg(deserializer);

        private OrientationConstraintMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            this.orientation = Geometry.QuaternionMsg.Deserialize(deserializer);
            deserializer.Read(out this.link_name);
            deserializer.Read(out this.absolute_x_axis_tolerance);
            deserializer.Read(out this.absolute_y_axis_tolerance);
            deserializer.Read(out this.absolute_z_axis_tolerance);
            deserializer.Read(out this.weight);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.orientation);
            serializer.Write(this.link_name);
            serializer.Write(this.absolute_x_axis_tolerance);
            serializer.Write(this.absolute_y_axis_tolerance);
            serializer.Write(this.absolute_z_axis_tolerance);
            serializer.Write(this.weight);
        }

        public override string ToString()
        {
            return "OrientationConstraintMsg: " +
            "\nheader: " + header.ToString() +
            "\norientation: " + orientation.ToString() +
            "\nlink_name: " + link_name.ToString() +
            "\nabsolute_x_axis_tolerance: " + absolute_x_axis_tolerance.ToString() +
            "\nabsolute_y_axis_tolerance: " + absolute_y_axis_tolerance.ToString() +
            "\nabsolute_z_axis_tolerance: " + absolute_z_axis_tolerance.ToString() +
            "\nweight: " + weight.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
