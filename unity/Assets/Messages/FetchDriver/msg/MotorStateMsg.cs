//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.FetchDriver
{
    [Serializable]
    public class MotorStateMsg : Message
    {
        public const string k_RosMessageName = "fetch_driver_msgs/MotorState";
        public override string RosMessageName => k_RosMessageName;

        //  TODO add motor state/error definitions
        public string name;
        public byte state;
        public byte error;
        public float velocity;
        public float effort;
        public float position;
        public float temperature;
        //  TODO: velocity/position gains
        public float motor_ratio;
        public float motor_angle_offset;
        public float motor_angle_offset_estimated;
        public float joint_ratio;

        public MotorStateMsg()
        {
            this.name = "";
            this.state = 0;
            this.error = 0;
            this.velocity = 0.0f;
            this.effort = 0.0f;
            this.position = 0.0f;
            this.temperature = 0.0f;
            this.motor_ratio = 0.0f;
            this.motor_angle_offset = 0.0f;
            this.motor_angle_offset_estimated = 0.0f;
            this.joint_ratio = 0.0f;
        }

        public MotorStateMsg(string name, byte state, byte error, float velocity, float effort, float position, float temperature, float motor_ratio, float motor_angle_offset, float motor_angle_offset_estimated, float joint_ratio)
        {
            this.name = name;
            this.state = state;
            this.error = error;
            this.velocity = velocity;
            this.effort = effort;
            this.position = position;
            this.temperature = temperature;
            this.motor_ratio = motor_ratio;
            this.motor_angle_offset = motor_angle_offset;
            this.motor_angle_offset_estimated = motor_angle_offset_estimated;
            this.joint_ratio = joint_ratio;
        }

        public static MotorStateMsg Deserialize(MessageDeserializer deserializer) => new MotorStateMsg(deserializer);

        private MotorStateMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.name);
            deserializer.Read(out this.state);
            deserializer.Read(out this.error);
            deserializer.Read(out this.velocity);
            deserializer.Read(out this.effort);
            deserializer.Read(out this.position);
            deserializer.Read(out this.temperature);
            deserializer.Read(out this.motor_ratio);
            deserializer.Read(out this.motor_angle_offset);
            deserializer.Read(out this.motor_angle_offset_estimated);
            deserializer.Read(out this.joint_ratio);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.name);
            serializer.Write(this.state);
            serializer.Write(this.error);
            serializer.Write(this.velocity);
            serializer.Write(this.effort);
            serializer.Write(this.position);
            serializer.Write(this.temperature);
            serializer.Write(this.motor_ratio);
            serializer.Write(this.motor_angle_offset);
            serializer.Write(this.motor_angle_offset_estimated);
            serializer.Write(this.joint_ratio);
        }

        public override string ToString()
        {
            return "MotorStateMsg: " +
            "\nname: " + name.ToString() +
            "\nstate: " + state.ToString() +
            "\nerror: " + error.ToString() +
            "\nvelocity: " + velocity.ToString() +
            "\neffort: " + effort.ToString() +
            "\nposition: " + position.ToString() +
            "\ntemperature: " + temperature.ToString() +
            "\nmotor_ratio: " + motor_ratio.ToString() +
            "\nmotor_angle_offset: " + motor_angle_offset.ToString() +
            "\nmotor_angle_offset_estimated: " + motor_angle_offset_estimated.ToString() +
            "\njoint_ratio: " + joint_ratio.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
