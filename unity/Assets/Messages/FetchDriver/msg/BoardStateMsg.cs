//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.FetchDriver
{
    [Serializable]
    public class BoardStateMsg : Message
    {
        public const string k_RosMessageName = "fetch_driver_msgs/BoardState";
        public override string RosMessageName => k_RosMessageName;

        public string name;
        public int board_type;
        public short board_revision;
        public short software_revision;
        public sbyte boot_status;
        public ushort board_flags;
        public ulong system_time;
        public float voltage;
        public float temperature;
        public uint packets_sent;
        public uint packets_recv;
        public uint packets_bad;
        public uint packets_back;

        public BoardStateMsg()
        {
            this.name = "";
            this.board_type = 0;
            this.board_revision = 0;
            this.software_revision = 0;
            this.boot_status = 0;
            this.board_flags = 0;
            this.system_time = 0;
            this.voltage = 0.0f;
            this.temperature = 0.0f;
            this.packets_sent = 0;
            this.packets_recv = 0;
            this.packets_bad = 0;
            this.packets_back = 0;
        }

        public BoardStateMsg(string name, int board_type, short board_revision, short software_revision, sbyte boot_status, ushort board_flags, ulong system_time, float voltage, float temperature, uint packets_sent, uint packets_recv, uint packets_bad, uint packets_back)
        {
            this.name = name;
            this.board_type = board_type;
            this.board_revision = board_revision;
            this.software_revision = software_revision;
            this.boot_status = boot_status;
            this.board_flags = board_flags;
            this.system_time = system_time;
            this.voltage = voltage;
            this.temperature = temperature;
            this.packets_sent = packets_sent;
            this.packets_recv = packets_recv;
            this.packets_bad = packets_bad;
            this.packets_back = packets_back;
        }

        public static BoardStateMsg Deserialize(MessageDeserializer deserializer) => new BoardStateMsg(deserializer);

        private BoardStateMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.name);
            deserializer.Read(out this.board_type);
            deserializer.Read(out this.board_revision);
            deserializer.Read(out this.software_revision);
            deserializer.Read(out this.boot_status);
            deserializer.Read(out this.board_flags);
            deserializer.Read(out this.system_time);
            deserializer.Read(out this.voltage);
            deserializer.Read(out this.temperature);
            deserializer.Read(out this.packets_sent);
            deserializer.Read(out this.packets_recv);
            deserializer.Read(out this.packets_bad);
            deserializer.Read(out this.packets_back);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.name);
            serializer.Write(this.board_type);
            serializer.Write(this.board_revision);
            serializer.Write(this.software_revision);
            serializer.Write(this.boot_status);
            serializer.Write(this.board_flags);
            serializer.Write(this.system_time);
            serializer.Write(this.voltage);
            serializer.Write(this.temperature);
            serializer.Write(this.packets_sent);
            serializer.Write(this.packets_recv);
            serializer.Write(this.packets_bad);
            serializer.Write(this.packets_back);
        }

        public override string ToString()
        {
            return "BoardStateMsg: " +
            "\nname: " + name.ToString() +
            "\nboard_type: " + board_type.ToString() +
            "\nboard_revision: " + board_revision.ToString() +
            "\nsoftware_revision: " + software_revision.ToString() +
            "\nboot_status: " + boot_status.ToString() +
            "\nboard_flags: " + board_flags.ToString() +
            "\nsystem_time: " + system_time.ToString() +
            "\nvoltage: " + voltage.ToString() +
            "\ntemperature: " + temperature.ToString() +
            "\npackets_sent: " + packets_sent.ToString() +
            "\npackets_recv: " + packets_recv.ToString() +
            "\npackets_bad: " + packets_bad.ToString() +
            "\npackets_back: " + packets_back.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
