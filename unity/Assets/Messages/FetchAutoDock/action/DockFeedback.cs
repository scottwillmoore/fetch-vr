//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.FetchAutoDock
{
    [Serializable]
    public class DockFeedback : Message
    {
        public const string k_RosMessageName = "fetch_auto_dock_msgs/Dock";
        public override string RosMessageName => k_RosMessageName;

        //  Feedback is the detected pose of the dock.
        public Geometry.PoseStampedMsg dock_pose;
        //  Plus the control output
        public Geometry.TwistMsg command;

        public DockFeedback()
        {
            this.dock_pose = new Geometry.PoseStampedMsg();
            this.command = new Geometry.TwistMsg();
        }

        public DockFeedback(Geometry.PoseStampedMsg dock_pose, Geometry.TwistMsg command)
        {
            this.dock_pose = dock_pose;
            this.command = command;
        }

        public static DockFeedback Deserialize(MessageDeserializer deserializer) => new DockFeedback(deserializer);

        private DockFeedback(MessageDeserializer deserializer)
        {
            this.dock_pose = Geometry.PoseStampedMsg.Deserialize(deserializer);
            this.command = Geometry.TwistMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.dock_pose);
            serializer.Write(this.command);
        }

        public override string ToString()
        {
            return "DockFeedback: " +
            "\ndock_pose: " + dock_pose.ToString() +
            "\ncommand: " + command.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Feedback);
        }
    }
}
