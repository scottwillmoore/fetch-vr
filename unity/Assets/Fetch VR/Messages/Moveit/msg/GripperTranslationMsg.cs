//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Moveit
{
    [Serializable]
    public class GripperTranslationMsg : Message
    {
        public const string k_RosMessageName = "moveit_msgs/GripperTranslation";
        public override string RosMessageName => k_RosMessageName;

        //  defines a translation for the gripper, used in pickup or place tasks
        //  for example for lifting an object off a table or approaching the table for placing
        //  the direction of the translation
        public Geometry.Vector3StampedMsg direction;
        //  the desired translation distance
        public float desired_distance;
        //  the min distance that must be considered feasible before the
        //  grasp is even attempted
        public float min_distance;

        public GripperTranslationMsg()
        {
            this.direction = new Geometry.Vector3StampedMsg();
            this.desired_distance = 0.0f;
            this.min_distance = 0.0f;
        }

        public GripperTranslationMsg(Geometry.Vector3StampedMsg direction, float desired_distance, float min_distance)
        {
            this.direction = direction;
            this.desired_distance = desired_distance;
            this.min_distance = min_distance;
        }

        public static GripperTranslationMsg Deserialize(MessageDeserializer deserializer) => new GripperTranslationMsg(deserializer);

        private GripperTranslationMsg(MessageDeserializer deserializer)
        {
            this.direction = Geometry.Vector3StampedMsg.Deserialize(deserializer);
            deserializer.Read(out this.desired_distance);
            deserializer.Read(out this.min_distance);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.direction);
            serializer.Write(this.desired_distance);
            serializer.Write(this.min_distance);
        }

        public override string ToString()
        {
            return "GripperTranslationMsg: " +
            "\ndirection: " + direction.ToString() +
            "\ndesired_distance: " + desired_distance.ToString() +
            "\nmin_distance: " + min_distance.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
