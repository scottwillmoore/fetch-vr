//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Moveit
{
    [Serializable]
    public class ChangeControlDimensionsRequest : Message
    {
        public const string k_RosMessageName = "moveit_msgs/ChangeControlDimensions";
        public override string RosMessageName => k_RosMessageName;

        //  For use with moveit_jog_arm Cartesian planner
        // 
        //  Turn on/off jogging along these dimensions.
        //  Give 'true' to enable jogging in the direction, 'false' to disable
        public bool control_x_translation;
        public bool control_y_translation;
        public bool control_z_translation;
        public bool control_x_rotation;
        public bool control_y_rotation;
        public bool control_z_rotation;

        public ChangeControlDimensionsRequest()
        {
            this.control_x_translation = false;
            this.control_y_translation = false;
            this.control_z_translation = false;
            this.control_x_rotation = false;
            this.control_y_rotation = false;
            this.control_z_rotation = false;
        }

        public ChangeControlDimensionsRequest(bool control_x_translation, bool control_y_translation, bool control_z_translation, bool control_x_rotation, bool control_y_rotation, bool control_z_rotation)
        {
            this.control_x_translation = control_x_translation;
            this.control_y_translation = control_y_translation;
            this.control_z_translation = control_z_translation;
            this.control_x_rotation = control_x_rotation;
            this.control_y_rotation = control_y_rotation;
            this.control_z_rotation = control_z_rotation;
        }

        public static ChangeControlDimensionsRequest Deserialize(MessageDeserializer deserializer) => new ChangeControlDimensionsRequest(deserializer);

        private ChangeControlDimensionsRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.control_x_translation);
            deserializer.Read(out this.control_y_translation);
            deserializer.Read(out this.control_z_translation);
            deserializer.Read(out this.control_x_rotation);
            deserializer.Read(out this.control_y_rotation);
            deserializer.Read(out this.control_z_rotation);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.control_x_translation);
            serializer.Write(this.control_y_translation);
            serializer.Write(this.control_z_translation);
            serializer.Write(this.control_x_rotation);
            serializer.Write(this.control_y_rotation);
            serializer.Write(this.control_z_rotation);
        }

        public override string ToString()
        {
            return "ChangeControlDimensionsRequest: " +
            "\ncontrol_x_translation: " + control_x_translation.ToString() +
            "\ncontrol_y_translation: " + control_y_translation.ToString() +
            "\ncontrol_z_translation: " + control_z_translation.ToString() +
            "\ncontrol_x_rotation: " + control_x_rotation.ToString() +
            "\ncontrol_y_rotation: " + control_y_rotation.ToString() +
            "\ncontrol_z_rotation: " + control_z_rotation.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
